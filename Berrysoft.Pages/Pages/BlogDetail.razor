@page "/blog/{filename}"

@using Berrysoft.Pages.Data
@using Markdig

@inject IBlogService BlogService

@if (notFound)
{
    <NotFoundComponent />
}
else if (text != null)
{
    <h1>@post.Title</h1>
    <p class="text-secondary">
        <time datetime="@post.Date">@post.Date.ToLongDateString()</time>
    </p>
    @if (plainText)
    {
        @text
    }
    else
    {
        @((MarkupString)text)
    }
}

@code {
    [Parameter]
    public string Filename { get; set; }

    private BlogPost post;
    private string text;
    private bool notFound;
    private bool plainText;

    private static readonly MarkdownPipeline markdigPipeline = new MarkdownPipelineBuilder().UseAdvancedExtensions().Build();

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(async () =>
        {
            post = await BlogService.GetBlogPostAsync(Filename);
            if (post == null)
            {
                text = null;
                plainText = true;
                notFound = true;
            }
            else
            {
                var content = await BlogService.GetBlogPostContentAsync(Filename);
                text = post.Type switch
                {
                    BlogPostType.Html => content,
                    BlogPostType.Markdown => Markdown.ToHtml(content, markdigPipeline),
                    _ => content
                };
                plainText = post.Type == BlogPostType.Text;
                notFound = false;
            }
        });
    }
}
