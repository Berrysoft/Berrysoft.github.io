@page "/counter"

@using System.Linq
@using System.Text
@using Berrysoft.Pages.Data
@using W8lessLabs.Blazor.LocalFiles

@inject IJSRuntime JSRuntime
@inject ICounterService CounterService

<h1><Tred Key="counterTitle" /></h1>

<table class="table">
    <thead>
        <tr>
            <th scope="col"><Tred Key="counterTotalCount" /></th>
            <th scope="col"><Tred Key="counterDistinctCount" /></th>
            <th scope="col"><Tred Key="counterSentenceCount" /></th>
            <th scope="col"><Tred Key="counterAverageCount" /></th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>@CounterService.TotalCount</td>
            <td>@CounterService.DistinctCount</td>
            <td>@CounterService.SentenceCount</td>
            <td>@CounterService.AverageCount</td>
        </tr>
    </tbody>
</table>

<FileSelect @ref="fileSelect" @ref:suppressField />

<div class="btn-group" role="group">
    <button type="button" class="btn btn-primary" @onclick="OpenFile"><Tred Key="counterImport" /></button>
    <button type="button" class="btn btn-secondary" @onclick="SaveFile"><Tred Key="counterExport" /></button>
</div>

<textarea class="form-control" style="height: 60vh; resize: vertical;" @bind-value="CounterService.Text" @bind-value:event="oninput" />

@code {
    private FileSelect fileSelect;

    private void OpenFile()
    {
        fileSelect.SelectFiles(async (selectedFiles) =>
        {
            SelectedFile file = selectedFiles.FirstOrDefault();
            if (file != null)
            {
                using (var fileReader = fileSelect.GetFileReader(file))
                {
                    byte[] fileContent = await fileReader.GetFileBytesAsync();
                    CounterService.Text = Encoding.UTF8.GetString(fileContent);
                    StateHasChanged();
                }
            }
        });
    }

    private async void SaveFile()
    {
        await JSRuntime.InvokeAsync<object>("saveFile", "article.txt", Encoding.UTF8.GetBytes(CounterService.Text));
    }
}
