@page "/"

@using Berrysoft.Pages.Data

@inject HttpClient Http
@inject ILocalizationService Localization
@inject ProjectService Project
@inject GitHubEventService GitHubEvent
@inject LinkService FriendLink

<div class="fade-in fade-in-1">
    <h1><Tred Key="indexTitle" /></h1>

    <p><Tred Key="indexDescription" /></p>
</div>

@if (Project.Data != null)
{
    <div class="fade-in fade-in-2">
        <h2><Tred Key="indexOtherProjects" /></h2>

        <div class="table-responsive-xl">
            <DataGrid T="ProjectBox" Items="@Project.Data">
                <Headers>
                    <DataGridHeader PropertyName="Name" Sortable="true"><Tred Key="indexOtherProjectName" /></DataGridHeader>
                    <DataGridHeader PropertyName="Language" Sortable="true"><Tred Key="indexOtherProjectLanguage" /></DataGridHeader>
                    <DataGridHeader PropertyName="Description" Sortable="false"><Tred Key="indexOtherProjectDescription" /></DataGridHeader>
                </Headers>
                <ChildContent Context="project">
                    <td><a href="@project.Url">@project.Name</a></td>
                    <td>@project.Language</td>
                    <td>@project.Description</td>
                </ChildContent>
            </DataGrid>
        </div>
    </div>
}

@if (GitHubEvent.Data != null)
{
    <div class="fade-in fade-in-3">
        <h2><Tred Key="indexGitHubEvents" /></h2>

        <div class="table-responsive-xl">
            <DataGrid T="GitHubEvent" Items="@GitHubEvent.Data.Where(ev => ev.Type == "PushEvent").Take(10)">
                <Headers>
                    <DataGridHeader Sortable="false"><Tred Key="indexGitHubEventMessage" /></DataGridHeader>
                    <DataGridHeader Sortable="false"><Tred Key="indexGitHubEventTime" /></DataGridHeader>
                    <DataGridHeader Sortable="false"><Tred Key="indexGitHubEventRepo" /></DataGridHeader>
                </Headers>
                <ChildContent Context="e">
                    <td><a href="@($"https://github.com/{e.Repo!.Name}/commit/{e.Payload!.Commits.LastOrDefault()?.Sha}")">@e.Payload!.Commits.LastOrDefault()?.Message</a></td>
                    <td><time datetime="@e.CreatedAt">@e.CreatedAt.ToString(Localization.Culture)</time></td>
                    <td>@e.Repo!.Name</td>
                </ChildContent>
            </DataGrid>
        </div>
    </div>
}

@if (FriendLink.Data != null)
{
    <div class="fade-in fade-in-4">
        <h2><Tred Key="indexLinks" /></h2>

        <div class="list-group list-group-flush">
            @foreach (var link in FriendLink.Data)
            {
                <a class="list-group-item list-group-item-action" href="@link.Url">@link.Name - @link.Title</a>
            }
        </div>
    </div>
}

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Project.LoadDataAsync();
            await GitHubEvent.LoadDataAsync();
            await FriendLink.LoadDataAsync();
            StateHasChanged();
        }
    }
}
